{
  "swagger": "2.0",
  "info": {
    "title": "Sample API",
    "version": "1.0.0",
    "description": "A sample API for testing MCP tool generation"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "schemes": ["https"],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "apiKey": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "List all users",
        "description": "Retrieve a list of all users in the system",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by user status",
            "required": false,
            "type": "string",
            "enum": ["active", "inactive", "pending"]
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "summary": "Create a new user",
        "description": "Create a new user in the system",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User's full name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address"
                },
                "role": {
                  "type": "string",
                  "enum": ["admin", "user", "moderator"],
                  "description": "User's role"
                }
              },
              "required": ["name", "email"]
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "summary": "Update user",
        "description": "Update an existing user's information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User's full name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address"
                },
                "status": {
                  "type": "string",
                  "enum": ["active", "inactive"],
                  "description": "User's status"
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "Delete user",
        "description": "Delete a user from the system",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    }
  }
}